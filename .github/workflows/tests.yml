name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  skip_duplicate:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
  test-pip:
      needs: skip_duplicate
      if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
      strategy:
        matrix:
          python-version: [ 3.7 ]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Get pip cache dir
          id: pip-cache
          run: |
            python -m pip install --upgrade pip wheel
            echo "::set-output name=dir::$(pip cache dir)"
        - name: pip cache
          uses: actions/cache@v2
          with:
            path: ${{ steps.pip-cache.outputs.dir }}
            key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py', '**/requirements.txt', '**/test-requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - name: Install dependencies
          run: |
            pip install --upgrade pip
            pip install -r build/test-requirements.txt
        - name: Run flake8
          run: make flake8
        - name: Run mypy
          run: make mypy
        - name: Check license
          run: make check-license
        - name: Check format
          run: |
            git clean -d -f -f
            make check-format
        - name: Test with pytest
          run: make coverage
        - name: Run notebooks
          run: make run-notebooks
        - name: Upload coverage
          uses: codecov/codecov-action@v1
          with:
            token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token